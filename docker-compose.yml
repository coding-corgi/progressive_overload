services:
  # 1. MySQL 데이터베이스 서비스
  mysql_db:
    image: mysql:8.0
    container_name: progressive_overload_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:3306"
    volumes:
      - ./db_data:/var/lib/mysql

    # 2. Redis 캐시 서비스
  redis_cache:
    image: redis:latest
    container_name: progressive_overload_redis
    restart: always
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - ./redis_data:/data

    # 3. RabbitMQ 메시지 브로커 서비스
  rabbitmq_broker:
    image: rabbitmq:3-management
    container_name: progressive_overload_rabbitmq 
    restart: always
    ports:
      - "${RABBITMQ_PORT}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT}:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}


  # 4. Account Service
  account_service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: account_service
    depends_on:
      - mysql_db
    environment:
      - DB_HOST=mysql_db
      - DB_PORT=3306
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    ports:
      - "3000:3000"
    working_dir: /app/apps/account_service
    command: pnpm run start:prod

  # 5. challenge Service
  challenge_service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: challenge_service
    depends_on:
      - mysql_db
      - account_service
    environment:
      - DB_HOST=mysql_db
      - DB_PORT=3306
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - ACCOUNT_SERVICE_URL=http://account_service:3000
    ports:
      - "3001:3000"
    working_dir: /app/apps/challenge_service
    command: pnpm run start:prod

volumes:
  db_data: